<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Forskås capsturnering on</title><link>https://noalerch.github.io/capsturnering/index.html</link><description>Recent content in Forskås capsturnering on</description><generator>Hugo -- gohugo.io</generator><language>se-sv</language><atom:link href="https://noalerch.github.io/capsturnering/index.xml" rel="self" type="application/rss+xml"/><item><title>Regler</title><link>https://noalerch.github.io/capsturnering/regler/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noalerch.github.io/capsturnering/regler/index.html</guid><description>Introduktion Vi kommer spela en modifierad of föränklad version av Uppsalacaps, dvs DVKV:s capsregler från Capseisa.
Tillbehör Caps kräver följande tillbehör:
kapsyler glas (av plast) vatten (för glasen) valfri dryck deltagare :) Positioner Caps spelas med spelarna sittandes i en ring. I mitten av ringen finns en ring av glas som i vårt fall innehåller en rimlig mängd vatten. Varje spelare har sitt eget glas, och i mitten av denna ring finns det så kallade mittglaset.</description></item><item><title>Turneringsformat</title><link>https://noalerch.github.io/capsturnering/turneringsformat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noalerch.github.io/capsturnering/turneringsformat/index.html</guid><description>Gruppspel Då vi är 24 (?) spelare kommer detta spelas i 8 lag av 2 spelare som bestäms i förväg. Vi börjar i 3 ringar med ca 4 lag var. Vid brist på deltagare kan vi istället spela ca 5 lag per ring med 2 ringar.
Slutspel I den slutliga ringen spelas caps med samma regler som tidigare. Paret som sitter kvar när alla andra åkt ut definieras som den slutgiltiga vinnaren!</description></item><item><title>Lag</title><link>https://noalerch.github.io/capsturnering/lag/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://noalerch.github.io/capsturnering/lag/index.html</guid><description>Lagen är som följer:
#define NO_PLAYERS = 24 char **get_teams(char *players[]) { // code not tested, do not expect this to work char **teams = malloc((NO_PLAYERS / 2) * sizeof(char *)); char *player = players[0]; // precondition: 24 players for (int i = 0; i &amp;lt; NO_PLAYERS / 2; ++i) { assign_to_team(teams, players[i]) } return teams; }</description></item></channel></rss>